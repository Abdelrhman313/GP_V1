@model IEnumerable<Gp_V1.Models.ReportedJob>

@{
    ViewBag.Title = "Show Reported Jobs";
}
@using GridMvc.Html

<h2 class="text-primary mb-3">Reported Jobs [@Model.Count()]</h2>

<hr />

@if (Model.Count() == 0)
{
    <div class="alert alert-danger">
        No Reported Jobs Yet!
    </div>
}
else
{
<div style="width: 100%">
    @Html.Grid(Model).Columns(columns =>
    {
        columns.Add(c => c.Job.JobTitle).Titled("Job Title").Filterable(true);
        columns.Add(c => c.Job.JobCategory.JobCategoryName).Titled("Job Category").Filterable(true);
        columns.Add(c => c.Job.JobType.JobTypeName).Titled("Job Type").Filterable(true);
        columns.Add(c => c.ReportedDate).Titled("Publish Date").Filterable(true);
        columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .RenderValueAs(o => @<a href="Details/@o.Id" class="btn btn-primary">Details</a>)
        .Filterable(false);
        columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .RenderValueAs(o => @<a href="javascript:void(0)" class="btn btn-danger deleteBtn" data-id="@o.Id">Delete</a>)
        .Filterable(false);

    }).WithPaging(4).Sortable(true)
</div>
@*
    <table class="table table-responsive table-bordered">
        <tr style="font-size: 15px">
            <th>
                JobTitle
            </th>
            <th>
                Job State
            </th>
            <th>
                Seeker
            </th>
            <th>
                Seeker State
            </th>
            <th>
                Provider
            </th>
            <th>
                Provider State
            </th>
            <th>
                Reported Date
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr style="font-size: 14px">
                <td>
                    @Html.DisplayFor(modelItem => item.Job.JobTitle)
                </td>
                <td>
                    @if (item.Job.JobState == true)
                    {
                        <button class="btn-sm btn-success">Open</button>
                    }
                    else
                    {
                        <button class="btn-sm btn-danger">Closed</button>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SeekerRegistration.Name)
                </td>
                <td>
                    @if (item.SeekerRegistration.IsActive == true)
                    {
                        <button class="btn-sm btn-success">Active</button>
                    }
                    else
                    {
                        <button class="btn-sm btn-danger">Block</button>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Job.RegisterUser.Name)
                </td>
                <td>
                    @if (item.Job.RegisterUser.IsActive == true)
                    {
                        <button class="btn-sm btn-success">Active</button>
                    }
                    else
                    {
                        <button class="btn-sm btn-danger">Block</button>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReportedDate)
                </td>
                <td>
                    @Html.ActionLink("Details", "Details", new { id = item.JobId }, new { @class = "btn btn-primary" })
                    <button class="btn btn-danger deleteBtn" data-id="@item.Id">Delete</button>
                </td>
            </tr>
        }

    </table>
*@
}

    <hr />

    <p>
        @Html.ActionLink("Back", "Index", "Home", null, new { @class = "btn btn-dark" })
    </p>

    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    @section scripts{
        <script>
            $(() => {
                allDeleteBtns = $(".deleteBtn");
                [...allDeleteBtns].forEach(btn => {
                    $(btn).click(() => {
                        id = $(btn).data("id");
                        $.ajax({
                            type: "Get",
                            url: "/Job/DeleteReportedJob/" + id,
                            success: res => {
                                if (res.result == 1) {
                                    swal({
                                        title: "Delete Reported Job!",
                                        text: "You Deleted the Reported Job Successfully!",
                                        icon: "success",
                                        button: null,
                                    });
                                    setTimeout(() => {
                                        location.reload();
                                    }, 3000);
                                } else {
                                    swal({
                                        title: "Delete Reported Job!",
                                        text: "Delete the Reported Job Failer!",
                                        icon: "error",
                                        button: null,
                                    });
                                }
                            },
                        });
                    });
                });
            });
        </script>
    }
